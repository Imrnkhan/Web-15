/*
A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

You are given a string S. You have to generate all the subsequences of the string S using a recursive approach (duplicates allowed)


Input
Input Format :

First line of the input contains length of the string S

Second line of the test case contains the string S

Constraints :

n <= 18




Output
Output all the substring in a particular order. To understand the order of printing, see the sample test case explanation


Sample Input 1 

4
abcd
Sample Output 1

a
ab
abc
abcd
abd
ac
acd
ad
b
bc
bcd
bd
c
cd
d
Hint

Output Explanation :

First output all the subsequences starting with first character. When all such subsequences got printed, then move to print all such starting with second chars, and so on.
*/

function runProgram(input) {
    input = input.trim().split('\n');
    console.log(printSub(input[1], +input[0]));
}

function printSub(str, n, index = -1, curr = "") { 
  if (index == n)   // base case
    return;
  if (!curr.length == 0) {  // output exp.
    console.log(curr);
  }

  for (var i = index + 1; i < n; i++) {
    curr += str[i];        
    printSub(str, n, i, curr);  // recursion

    curr = curr.replace(curr[curr.length - 1], "");
  }
    return curr;
}

process.stdin.resume();
process.stdin.setEncoding("ascii");
let read = "";
process.stdin.on("data", function(input) {
  read += input;
});
process.stdin.on("end", function() {
  read = read.replace(/\n$/, "");
  read = read.replace(/\n$/, "");
  runProgram(read);
});